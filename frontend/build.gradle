plugins {
    id "com.github.node-gradle.node" version "7.0.2"
    id 'base'
}

repositories {
    mavenCentral()
}

node {
    // Version of node to use.
    version = '20.9.0'
    // Version of npm to use.
    npmVersion = ''
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

// Packages the frontend into a jar file
// The Jar-File will be placed in the build/distributions directory
tasks.register('package_frontend', Jar) {

    // first build the frontend
    dependsOn npm_run_build

    // In the Jar, everything from the dist directory will be placed in the static directory
    from("dist") {
        into 'static'
    }

    archiveFileName = 'frontend.jar'
}

// Task to build the frontend
npm_run_build {

    // Only execute this task if something in the frontend has changed.
    inputs.files fileTree('src')
    inputs.files fileTree('public')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    outputs.dir 'dist'
}

configurations {
    npmResources
}

// We extend the default configuration with the npmResources configuration
configurations.default.extendsFrom(configurations.npmResources)

// npmResources config produces frontend artifact of type jar
artifacts {
    npmResources(package_frontend.archiveFile) {
        builtBy package_frontend
        type "jar"
    }
}

// Task to clean the dist and build directory
clean {
    delete 'dist'
    delete 'build'
}

